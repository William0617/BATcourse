package BATcourse.Chapter12;

/**
 * 最长上升子序列:
 * 这是一个经典的LIS(即最长上升子序列)问题，请设计一个尽量优的解法求出序列的最长上升子序列的长度。
 * 给定一个序列A及它的长度n(长度小于等于500)，请返回LIS的长度。
 */

/**
 * 解题思路：
 * 1. 生成长度为n的数组dp[];
 * 2. dp[i]表示必须以A[i]结尾的情况下，最大递增子序列长度；
 */
public class LongestIncreasingSubsequence {
    public int getLIS(int[] A, int n) {
        if (A.length <= 0 || n <= 0)
            return 0;
        int[] dp = new int[n];
        //处理边界。本题边界是第一个数A[0]
        dp[0] = 1;
        //求dp[i]的值；如何选择倒数第二个数？所有比A[i]小的数中，
        //选择以某个数A[x]结尾的dp[x]最大的数，做倒数第二个数；
        for (int i = 1; i < dp.length; i++) {
            //所有前面比A[i]小的数中，选择以某个数A[x]结尾的dp[x]最大的数，做倒数第二个数；
            int max = -1;
            for (int j = 0; j < i; j++) {
                if (A[i] > A[j] && dp[j] > max)
                    max = dp[j];
            }
            if (max == -1)
                dp[i] = 1;
            else
                dp[i] = max + 1;
        }
        int res = -1;
        for (int i = 0; i < dp.length; i++) {
            if (dp[i] > res)
                res = dp[i];
        }
        return res;
    }

    public static void main(String[] args) {
        int[] A = {395, 132, 276, 31, 612, 103, 209, 105, 214, 541, 454, 87, 600, 385, 345, 393, 45, 154, 70, 101, 468, 496, 253, 181, 162, 605, 425, 588, 74, 261, 155, 58, 549, 378, 535, 217, 213, 35, 564, 204, 193, 301, 78, 470, 140, 566, 315, 162, 471, 80, 451, 208, 402, 80, 224, 375, 279, 567, 272, 39, 495, 622, 256, 396, 452, 141, 344, 586, 310, 506, 348, 481, 388, 599, 412, 105, 75, 338, 71, 149, 19, 317, 23, 8, 592, 452, 624, 395, 412, 12, 303, 207, 491, 466, 238, 94, 538, 478, 163, 624, 308, 271, 18, 417, 209, 83, 18, 113, 169, 521, 539, 242, 36, 180, 429, 360, 203, 164, 580, 198, 98, 119, 157, 249, 609, 93, 323, 592, 105, 573, 243, 132, 25, 208, 505, 141, 454, 83, 199, 279, 464, 96, 285, 239, 24, 299, 484, 562, 410, 285, 421, 280, 63, 288, 502, 503, 55, 615, 395, 115, 560, 218, 165, 224, 536, 556, 201, 573, 167, 248, 541, 539, 35, 112, 56, 326, 138, 362, 91, 14, 531, 539, 291, 497, 570, 171, 615, 318, 586, 354, 462, 31, 199, 297, 589, 86, 257, 618, 591, 59, 532, 199, 302, 195, 587, 51, 87, 504, 62, 403, 513, 33, 86, 166, 576, 51, 201, 254, 343, 422, 388, 604, 305, 511, 388, 403, 564, 534, 466, 423, 42, 92, 146, 435, 613, 92, 239, 455, 614, 332, 176, 218, 60, 432, 584, 205, 323, 170, 320};
        LongestIncreasingSubsequence l = new LongestIncreasingSubsequence();
        l.getLIS(A, A.length);
    }
}
